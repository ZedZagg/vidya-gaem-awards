#
# INTERNAL SYSTEM STUFF
#

index:
    path:     /
    defaults: { _controller: AppBundle:Static:index }

login_check:
    path:     /login

logout:
    path:     /logout

#
# FRONT PAGE
#

home:
    path:     /home
    defaults: { _controller: AppBundle:Index:index }

promo:
    path:     /promo
    defaults: { _controller: AppBundle:Index:promo }


#
# NEWS
#

news:
    path:     /news
    defaults: { _controller: AppBundle:News:index }

newsAdd:
    path:     /news/add
    defaults: { _controller: AppBundle:News:add }
    methods:  [POST]

newsDelete:
    path:     /news/delete/{id}
    defaults: { _controller: AppBundle:News:delete }
    methods:  [POST]
    requirements:
        id: '\d+'

#
# VIDEO GAMES
#
videoGames:
    path:     /vidya-in-2017
    defaults: { _controller: AppBundle:VideoGames:index, permission: 'ROLE_ADD_VIDEO_GAME' }
    methods:  [GET]

addVideoGame:
    path:     /vidya-in-2017
    defaults: { _controller: AppBundle:VideoGames:add }
    methods:  [POST]

#
# CREW
#

people:
    path:     /crew
    defaults: { _controller: AppBundle:People:index }

permissions:
    path:     /crew/permissions
    defaults: { _controller: AppBundle:People:permissions }

addPerson:
    path:     /crew/new
    defaults: { _controller: AppBundle:People:new }

userSearch:
    path:     /crew/search
    methods:  [POST]
    defaults: { _controller: AppBundle:People:search }

viewPerson:
    path:     /crew/{steamID}
    defaults: { _controller: AppBundle:People:view }
    requirements:
        steamID: '\d+'

editPerson:
    path:     /crew/{steamID}/edit
    methods:  [GET]
    defaults: { _controller: AppBundle:People:edit }
    requirements:
        steamID: '\d+'

editPersonPost:
    path:     /crew/{steamID}/edit
    methods:  [POST]
    defaults: { _controller: AppBundle:People:post }
    requirements:
        steamID: '\d+'

#
# AWARDS
#

awards:
    path:     /awards
    methods:  [GET]
    defaults: { _controller: AppBundle:Award:index, permission: 'ROLE_AWARDS_EDIT' }

awardFrontendPost:
    path:     /awards
    methods:  [POST]
    defaults: { _controller: AppBundle:Award:post, permission: 'ROLE_AWARDS_EDIT' }

awardManager:
    path:     /awards/manage
    methods:  [GET]
    defaults: { _controller: AppBundle:AwardAdmin:managerList }

awardManagerPost:
    path:     /awards/manage
    methods:  [POST]
    defaults: { _controller: AppBundle:AwardAdmin:managerPost }

awardManagerPostAjax:
    path:     /awards/manage/ajax
    methods:  [POST]
    defaults: { _controller: AppBundle:AwardAdmin:managerPostAjax }

nomineeManager:
    path:     /nominees/{awardID}
    methods:  [GET]
    defaults: { _controller: AppBundle:Nominee:index, 'awardID': null }

nomineePost:
    path:     /nominees/{awardID}
    methods:  [POST]
    defaults: { _controller: AppBundle:Nominee:post }

#
# VOTING
#

viewVotingCode:
    path:     /vote/code
    defaults: { _controller: AppBundle:Voting:codeViewer }

voting:
    path:     /vote/{awardID}
    methods:  [GET]
    defaults: { _controller: AppBundle:Voting:index, 'awardID': null, permission: 'ROLE_VOTING_VIEW' }

votingSubmission:
    path:     /vote/{awardID}
    methods:  [POST]
    defaults: { _controller: AppBundle:Voting:post, permission: 'ROLE_VOTING_VIEW' }

voteWithCode:
    path:     /vote/v/{code}
    defaults: { _controller: AppBundle:Voting:codeEntry, permission: 'ROLE_VOTING_VIEW' }

#
# RESULTS
#

winners:
    path:     /winners
    methods:  [GET]
    defaults: { _controller: AppBundle:Result:simple, permission: 'ROLE_VOTING_RESULTS' }

winnerImageUpload:
    path:     /winners
    methods:  [POST]
    defaults: { _controller: AppBundle:Result:winnerImageUpload }

results:
    path:     /results/{all}
    defaults: { _controller: AppBundle:Result:detailed, 'all': null, permission: 'ROLE_VOTING_RESULTS' }
    requirements:
        all: '(all)?'

pairwiseResults:
    path:     /results/pairwise
    defaults: { _controller: AppBundle:Result:pairwise, permission: 'ROLE_VOTING_RESULTS' }

#
# REFERRERS
#

referrers:
    path:     /referrers
    defaults: { _controller: AppBundle:Referrer:index }

#
# AUDIT LOG
#

auditLog:
    path:     /audit-log
    defaults: { _controller: AppBundle:AuditLog:index }

#
# LAUNCHER
#

countdown:
    path:     /countdown
    defaults: { _controller: AppBundle:Launcher:countdown, permission: 'ROLE_VIEW_UNFINISHED_PAGES' }

stream:
    path:     /stream
    defaults: { _controller: AppBundle:Launcher:stream, permission: 'ROLE_VIEW_UNFINISHED_PAGES' }

finished:
    path:     /finished
    defaults: { _controller: AppBundle:Launcher:finished, permission: 'ROLE_VIEW_UNFINISHED_PAGES' }

#
# STATIC PAGES
#

privacy:
    path:     /privacy
    defaults: { _controller: FrameworkBundle:Template:template, template: 'privacy.html.twig' }

videos:
    path:     /videos
    defaults: { _controller: AppBundle:Static:videos, permission: 'ROLE_VIEW_UNFINISHED_PAGES' }

soundtrack:
    path:     /soundtrack
    defaults: { _controller: AppBundle:Static:soundtrack, permission: 'ROLE_VIEW_UNFINISHED_PAGES' }

credits:
    path:     /credits
    defaults: { _controller: AppBundle:Static:credits, permission: 'ROLE_VIEW_UNFINISHED_PAGES' }

resultRedirect:
    path:     /voting/results
    defaults: { _controller: FrameworkBundle:Redirect:redirect, route: 'results' }

#
# CONFIG
#

config:
    path:     /config
    methods:  [GET]
    defaults: { _controller: AppBundle:Config:index }

configPost:
    path:     /config
    methods:  [POST]
    defaults: { _controller: AppBundle:Config:post }

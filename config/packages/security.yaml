security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        database:
            entity:
                class: 'App\Entity\User'
                property: 'steamId'

        anonymous:
            id: 'App\Security\AnonymousUserProvider'

        users:
            chain:
                providers: ['database', 'anonymous']

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        steam:
            pattern: ^/
#            lazy: true
#            anonymous: true
            provider: users
            entry_point: App\Security\EntryPoint\SteamEntryPoint
            access_denied_handler: App\Security\EntryPoint\AccessDeniedHandler

            # See App\Security\AnonymousAuthBundle for reasoning
            anonymous_handler: true

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 2419200 # 4 weeks in seconds
                always_remember_me: true
                signature_properties: ['id']

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            logout:
                path:   /logout
                target: /

            custom_authenticators:
                - App\Security\SteamAuthenticator

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/config/editor, roles: ROLE_TEMPLATE_EDIT }
        - { path: ^/config, roles: ROLE_EDIT_CONFIG }
        - { path: ^/news/add, roles: ROLE_NEWS_MANAGE }
        - { path: ^/news/delete, roles: ROLE_NEWS_MANAGE }
        - { path: ^/vidya, roles: [CONDITIONALLY_PUBLIC, ROLE_ADD_VIDEO_GAME] }
        - { path: ^/vidya/add, roles: ROLE_ADD_VIDEO_GAME }
        - { path: ^/vidya/remove, roles: ROLE_ADD_VIDEO_GAME }
        - { path: ^/team/.+/edit, roles: ROLE_PROFILE_EDIT_DETAILS }
        - { path: ^/team/new, roles: ROLE_ADD_USER }
        - { path: ^/team/search, roles: ROLE_ADD_USER }
        - { path: ^/team, roles: ROLE_PROFILE_VIEW }
        - { path: ^/awards/autocompleters, roles: ROLE_AUTOCOMPLETER_EDIT, methods: [GET] }
        - { path: ^/awards/manage, roles: ROLE_AWARDS_FEEDBACK, methods: [GET] }
        - { path: ^/awards/manage, roles: ROLE_AWARDS_EDIT, methods: [POST] }
        - { path: ^/awards, roles: [CONDITIONALLY_PUBLIC, ROLE_AWARDS_EDIT] }
        - { path: ^/nominees, roles: ROLE_NOMINATIONS_VIEW, methods: [GET] }
        - { path: ^/nominees, roles: ROLE_NOMINATIONS_EDIT, methods: [POST] }
        - { path: ^/tasks, roles: ROLE_TASKS_VIEW }
        - { path: ^/vote/code, roles: ROLE_VOTING_VIEW }
        - { path: ^/vote, roles: [CONDITIONALLY_PUBLIC, ROLE_VOTING_VIEW] }
        - { path: ^/predictions/leaderboard, roles: [CONDITIONALLY_PUBLIC, ROLE_VOTING_RESULTS] }
        - { path: ^/predictions, roles: [CONDITIONALLY_PUBLIC, ROLE_VOTING_VIEW] }
        - { path: ^/winners, roles: [CONDITIONALLY_PUBLIC, ROLE_VOTING_RESULTS], methods: [GET] }
        - { path: ^/winners, roles: ROLE_AWARDS_EDIT, methods: [POST] }
        - { path: ^/results, roles: [CONDITIONALLY_PUBLIC, ROLE_VOTING_RESULTS] }
        - { path: ^/referrers, roles: ROLE_REFERRERS_VIEW }
        - { path: ^/audit-log, roles: ROLE_AUDIT_LOG_VIEW }
        - { path: ^/countdown, roles: [CONDITIONALLY_PUBLIC, ROLE_VIEW_UNFINISHED_PAGES] }
        - { path: ^/stream, roles: [CONDITIONALLY_PUBLIC, ROLE_VIEW_UNFINISHED_PAGES] }
        - { path: ^/finished, roles: [CONDITIONALLY_PUBLIC, ROLE_VIEW_UNFINISHED_PAGES] }
        - { path: ^/credits, roles: [CONDITIONALLY_PUBLIC, ROLE_VIEW_UNFINISHED_PAGES] }
        - { path: ^/videos, roles: [CONDITIONALLY_PUBLIC, ROLE_VIEW_UNFINISHED_PAGES] }
        - { path: ^/soundtrack, roles: [CONDITIONALLY_PUBLIC, ROLE_VIEW_UNFINISHED_PAGES] }
        - { path: ^/lootboxes, roles: ROLE_ITEMS_MANAGE }
        - { path: ^/voting-decorations, roles: ROLE_ADVERTS_MANAGE }
        - { path: ^/arg, roles: ROLE_ARG_MANAGE }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon

#
# INTERNAL SYSTEM STUFF
#

index:
    path:       /
    controller: App\Controller\StaticController::indexAction

login:
    path:       /login
    controller: App\Controller\AuthController::loginAction

#loginCheck:
#    path:       /login/check

loginReturn:
    path:       /login/return
    controller: App\Controller\AuthController::loginReturnAction

logout:
    path:       /logout

steam_authentication_callback:
    path:       /steam/login_check
    controller: Knojector\SteamAuthenticationBundle\Controller\SteamController::callback

#
# FRONT PAGE
#

home:
    path:       /home
    controller: App\Controller\IndexController::indexAction

promo:
    path:       /promo
    controller: App\Controller\IndexController::promoAction


#
# NEWS
#

news:
    path:       /news
    controller: App\Controller\NewsController::indexAction

newsAdd:
    path:       /news/add
    controller: App\Controller\NewsController::addAction
    methods:    [POST]

newsDelete:
    path:       /news/delete/{id}
    controller: App\Controller\NewsController::deleteAction
    methods:    [POST]
    requirements:
        id: '\d+'

#
# VIDEO GAMES
#
videoGames:
    path:       /vidya
    controller: App\Controller\VideoGamesController::indexAction
    methods:    [GET]

addVideoGame:
    path:       /vidya/add
    controller: App\Controller\VideoGamesController::add
    methods:    [POST]

removeVideoGame:
    path:       /vidya/remove
    controller: App\Controller\VideoGamesController::remove
    methods:    [POST]

reloadVideoGamesWikipedia:
    path:       /vidya/reload
    controller: App\Controller\VideoGamesController::reloadWikipedia
    methods:    [POST]

reloadVideoGamesIgdb:
    path:       /vidya/reload/igdb
    controller: App\Controller\VideoGamesController::reloadIgdb
    methods:    [POST]

#
# CREW
#

people:
    path:       /team
    controller: App\Controller\PeopleController::indexAction

permissions:
    path:       /team/permissions
    controller: App\Controller\PeopleController::permissionsAction

addPerson:
    path:       /team/add
    controller: App\Controller\PeopleController::newAction

userSearch:
    path:       /team/add/search
    methods:    [POST]
    controller: App\Controller\PeopleController::searchAction

viewPerson:
    path:       /team/{steamID}
    controller: App\Controller\PeopleController::viewAction
    requirements:
        steamID: '\d+'

editPerson:
    path:       /team/{steamID}/edit
    methods:    [GET]
    controller: App\Controller\PeopleController::editAction
    requirements:
        steamID: '\d+'

editPersonPost:
    path:       /team/{steamID}/edit
    methods:    [POST]
    controller: App\Controller\PeopleController::postAction
    requirements:
        steamID: '\d+'

#
# AWARDS
#

awards:
    path:       /awards
    methods:    [GET]
    controller: App\Controller\AwardController::indexAction

awardFrontendPost:
    path:       /awards
    methods:    [POST]
    controller: App\Controller\AwardController::postAction

awardManager:
    path:       /awards/manage
    methods:    [GET]
    controller: App\Controller\AwardAdminController::managerListAction

awardManagerPost:
    path:       /awards/manage
    methods:    [POST]
    controller: App\Controller\AwardAdminController::managerPostAction

awardManagerPostAjax:
    path:       /awards/manage/ajax
    methods:    [POST]
    controller: App\Controller\AwardAdminController::managerPostAjaxAction

nomineeExport:
    path: /nominees/export
    methods:    [GET]
    controller: App\Controller\NomineeController::exportNomineesAction

nomineeUserNominationExport:
    path:       /nominees/export/user-nominations
    methods:    [GET]
    controller: App\Controller\NomineeController::exportUserNominationsAction

nomineeManager:
    path:       /nominees/{awardID?}
    methods:    [GET]
    controller: App\Controller\NomineeController::indexAction

nomineePost:
    path:       /nominees/{awardID}
    methods:    [POST]
    controller: App\Controller\NomineeController::postAction

autocompleters:
    path:       /awards/autocompleters
    methods:    [GET]
    controller: App\Controller\AutocompleterController::indexAction

autocompleterAjax:
    path:       /awards/autocompleters/ajax
    methods:    [POST]
    controller: App\Controller\AutocompleterController::ajax

autocompleterWikipedia:
    path:       /awards/autocompleters/ajax/wikipedia
    methods:    [GET]
    controller: App\Controller\AutocompleterController::wikipedia

autocompleterIgdb:
    path:       /awards/autocompleters/ajax/igdb
    methods:    [GET]
    controller: App\Controller\AutocompleterController::igdb

#
# TASKS
#

tasks:
    path:       /tasks
    methods:    [GET]
    controller: App\Controller\TasksController::indexAction

tasksImageCheck:
    path:       /tasks/check-images
    controller: App\Controller\TasksController::imageCheckAction

tasksPost:
    path:       /tasks
    methods:    [POST]
    controller: App\Controller\TasksController::postAction

#
# PREDICTIONS
#

#predictions:
#    path:       /predictions/picks/{id?}
#    controller: App\Controller\PredictionController:index
#    requirements:
#        id: '[0-9]+'
#
#predictionRules:
#    path:       /predictions/rules
#    controller: App\Controller\PredictionController:rules
#
#predictionJoin:
#    path:       /predictions/join
#    controller: App\Controller\PredictionController:join
#
#predictionUpdatePick:
#    path:       /predictions/picks{id}/update
#    methods:    [POST]
#    controller: App\Controller\PredictionController:updatePick
#
#predictionUpdateDetails:
#    path:       /predictions/details
#    controller: App\Controller\PredictionController:updateDetails
#
#predictionLeaderboard:
#    path:       /predictions/leaderboard
#    controller: App\Controller\PredictionController:leaderboard
#
#predictionRedirect:
#    path:       /predictions
#    controller: Symfony\Bundle\FrameworkBundle\Controller\RedirectController::redirectAction
#    defaults:
#        route: predictionLeaderboard

#
# VOTING
#

viewVotingCode:
    path:       /vote/code
    controller: App\Controller\VotingController::codeViewerAction

voting:
    path:       /vote/{awardID?}
    methods:    [GET]
    controller: App\Controller\VotingController::indexAction

votingSubmission:
    path:       /vote/{awardID}
    methods:    [POST]
    controller: App\Controller\VotingController::postAction

voteWithCode:
    path:       /vote/v/{code}
    controller: App\Controller\VotingController::codeEntryAction
    requirements:
        code: '.+'

#
# RESULTS
#

winners:
    path:       /winners
    methods:    [GET]
    controller: App\Controller\ResultController::simpleAction

winnerImageUpload:
    path:       /winners
    methods:    [POST]
    controller: App\Controller\ResultController::winnerImageUploadAction

results:
    path:       /results
    controller: App\Controller\ResultController::detailedAction

pairwiseResults:
    path:       /results/pairwise
    controller: App\Controller\ResultController::pairwiseAction

#
# REFERRERS
#

referrers:
    path:       /referrers
    controller: App\Controller\ReferrerController::indexAction

#
# AUDIT LOG
#

auditLog:
    path:       /audit-log
    controller: App\Controller\AuditLogController::indexAction

#
# LAUNCHER
#

countdown:
    path:       /countdown
    controller: App\Controller\LauncherController::countdownAction

stream:
    path:       /stream
    controller: App\Controller\LauncherController::streamAction

finished:
    path:       /finished
    controller: App\Controller\LauncherController::finishedAction

#
# STATIC PAGES
#

privacy:
    path:       /privacy
    controller: Symfony\Bundle\FrameworkBundle\Controller\TemplateController::templateAction
    defaults:
        template: 'privacy.html.twig'

videos:
    path:       /videos
    controller: Symfony\Bundle\FrameworkBundle\Controller\TemplateController::templateAction
    defaults:
        template: 'videos.html.twig'

soundtrack:
    path:       /soundtrack
    controller: App\Controller\StaticController::soundtrackAction
    defaults:
        template: 'soundtrack.html.twig'

credits:
    path:       /credits
    controller: Symfony\Bundle\FrameworkBundle\Controller\TemplateController::templateAction
    defaults:
        template: 'credits.html.twig'

trailers:
    path:       /trailers
    controller: App\Controller\StaticController::trailersAction

resultRedirect:
    path:       /voting/results
    controller: Symfony\Bundle\FrameworkBundle\Controller\RedirectController::redirectAction
    defaults:
        route: 'results'

#
# CONFIG
#

config:
    path:       /config
    methods:    [GET]
    controller: App\Controller\ConfigController::indexAction

configPost:
    path:       /config
    methods:    [POST]
    controller: App\Controller\ConfigController::postAction

cron:
    path:       /config/cron
    methods:    [GET]
    controller: App\Controller\ConfigController::cronAction

cronPost:
    path:       /config/cron
    methods:    [POST]
    controller: App\Controller\ConfigController::cronPostAction

#
# PAGE EDITOR
#

editor:
    path:       /config/editor
    methods:    [GET]
    controller: App\Controller\EditorController::indexAction

editorPost:
    path:       /config/editor
    methods:    [POST]
    controller: App\Controller\EditorController::postAction

#
# LOOTBOXES (ADMIN SECTION)
#

lootboxRedirect:
    path:       /lootboxes
    controller: Symfony\Bundle\FrameworkBundle\Controller\RedirectController::redirectAction
    defaults:
        route: lootboxItems

lootboxItems:
    path:       /lootboxes/items
    methods:    [GET]
    controller: App\Controller\LootboxController::items

lootboxItemPost:
    path:       /lootboxes/items
    methods:    [POST]
    controller: App\Controller\LootboxController::itemPost

lootboxItemCalculation:
    path:       /lootboxes/items/calculation
    methods:    [POST]
    controller: App\Controller\LootboxController::itemCalculation

lootboxTiers:
    path:       /lootboxes/tiers
    methods:    [GET]
    controller: App\Controller\LootboxController::tiers

lootboxTierPost:
    path:       /lootboxes/tiers
    methods:    [POST]
    controller: App\Controller\LootboxController::tierPost

lootboxTierCalculation:
    path:       /lootboxes/tiers/calculation
    methods:    [POST]
    controller: App\Controller\LootboxController::tierCalculation

lootboxSettings:
    path:       /lootboxes/settings
    methods:    [GET]
    controller: App\Controller\LootboxController::settings

lootboxSettingsSave:
    path:       /lootboxes/settings
    methods:    [POST]
    controller: App\Controller\LootboxController::settingsSave

#
# INVENTORY (VOTING PAGE)
#

inventoryPurchaseLootbox:
    path:       /inventory/purchase-lootbox
    methods:    [POST]
    controller: App\Controller\InventoryController::purchaseLootbox

#
# SPECIAL
#

advertManager:
    path:       /voting-decorations
    controller: App\Controller\AdvertManagerController::indexAction
    methods:    [GET]

advertPost:
    path:       /voting-decorations
    methods:    [POST]
    controller: App\Controller\AdvertManagerController::postAction

advertRedirect:
    path:       /link/{advertToken}
    controller: App\Controller\AdvertManagerController::redirectAction
    requirements:
        advertToken: '^[0-9a-f]+$'

captchaManager:
    path:       /captchas
    methods:    [GET]
    controller: App\Controller\CaptchaController::indexAction

captchaPost:
    path:       /captchas
    methods:    [POST]
    controller: App\Controller\CaptchaController::postAction

captchaStats:
    path:       /captchas/stats
    methods:    [GET]
    controller: App\Controller\CaptchaController::statsAction

captchaBulkImageUploader:
    path:       /captchas/bulk-image-uploader
    methods:    [GET]
    controller: App\Controller\CaptchaController::bulkImageAction

captchaBulkImageUploaderSubmit:
    path:       /captchas/bulk-image-uploader
    methods:    [POST]
    controller: App\Controller\CaptchaController::bulkImageSubmitAction

captchaResult:
    path:       /captcha/result
    methods:    [POST]
    controller: App\Controller\CaptchaController::resultAction

rpgName:
    path:       /rpg/name
    methods:    [POST]
    controller: App\Controller\RpgController::nameAction
